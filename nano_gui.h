/*
  This source file is under General Public License version 3.

  Detailed comments are available in the ubitx.h file
*/

#ifndef _NANO_GUI_H_
#define _NANO_GUI_H_

/* UI functions */
struct Point {
  int16_t x;
  int16_t y;
};
extern struct Point tsPoint;

//

/* Color definitions */
#define DISPLAY_BLACK       0x0020  // 0x0000  // <   0,   0,   0
#define DISPLAY_NAVY        0x000F  // <   0,   0, 123
#define DISPLAY_DARKGREEN   0x03E0  // <   0, 125,   0
#define DISPLAY_DARKCYAN    0x03EF  // <   0, 125, 123
#define DISPLAY_MAROON      0x7800  // < 123,   0,   0
#define DISPLAY_PURPLE      0x780F  // < 123,   0, 123
#define DISPLAY_OLIVE       0x7BE0  // < 123, 125,   0
#define DISPLAY_LIGHTGREY   0xC618  // < 198, 195, 198
#define DISPLAY_DARKGREY    0x7BEF  // < 123, 125, 123
#define DISPLAY_BLUE        0x001F  // <   0,   0, 255
#define DISPLAY_GREEN       0x07E0  // <   0, 255,   0
#define DISPLAY_CYAN        0x7EDB  //0x06DB  //0x07FF  // <   0, 255, 255
#define DISPLAY_RED         0xF800  // < 255,   0,   0
#define DISPLAY_MAGENTA     0xF81F  // < 255,   0, 255
#define DISPLAY_YELLOW      0xFFE0  // < 255, 255,   0
#define DISPLAY_WHITE       0xFFFF  // < 255, 255, 255
#define DISPLAY_ORANGE      0xCC40  //0xFD20  // < 255, 165,   0
#define DISPLAY_GREENYELLOW 0xAFE5  // < 173, 255,  41
#define DISPLAY_PINK        0xFC18  // < 255, 130, 198
#define DISPLAY_DIMGOLD     0x9C40  //0xBD20  //0xD689  //0xC66D  //0xE74E
#define DISPLAY_WILLBACK    0x00C5  //0x10C4  //0x31C8  //0x0861  //0x0108  //0x0253
#define DISPLAY_3DBOTTOM    0x4228  //0x52AA  //0x31A6


void displayInit();
void displayClear(uint16_t color);
// void displayPixel(uint16_t x, uint16_t y, uint16_t color);  //  <<<--- not used...?
void displayHline(uint16_t x, uint16_t y, uint16_t l, uint16_t color);
void displayVline(uint16_t x, uint16_t y, uint16_t l, uint16_t color);
void displayRect(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t hicolor, uint16_t lowcolor = 0);
void displayFillrect(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color);
void displayChar(int16_t x, int16_t y, uint8_t c, uint16_t color, uint16_t bg);
int16_t displayTextExtent(const char * text);
void displayRawText(const char * text, int x1, int y1, uint16_t color, uint16_t background);
void displayText(const char * text, int16_t x1, int16_t y1, int16_t w, int16_t h, uint16_t color, uint16_t background,
    uint16_t borderhigh, uint16_t borderlow = 0);

/* touch functions */
bool readTouch();
void doTouchCalibration();
void scaleTouch(struct Point * p);

const uint8_t textLineHeight = 18;   //  #define TEXT_LINE_HEIGHT 18

/* Font data stored PER GLYPH */
typedef struct {
  uint16_t bitmapOffset;     // < Pointer into GFXfont->bitmap  // was uint16_t
  uint8_t  width;            // < Bitmap dimensions in pixels
  uint8_t  height;           // < Bitmap dimensions in pixels
  uint8_t  xAdvance;         // < Distance to advance cursor (x axis)
  int8_t   xOffset;          // < X dist from cursor pos to UL corner
  int8_t   yOffset;          // < Y dist from cursor pos to UL corner
} GFXglyph;


/* Data stored for FONT AS A WHOLE */
typedef struct {
  uint8_t  * bitmap;      // < Glyph bitmaps, concatenated
  GFXglyph * glyph;       // < Glyph array
  uint8_t   first;       // < ASCII extents (first char)
  uint8_t   last;        // < ASCII extents (last char)
  // uint8_t   yAdvance;    // < Newline distance (y axis)  //  <<<--- not used, apparently
} GFXfont;


/* font bitmap data */
const uint8_t font2Bitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x1F, 0xF0, 0xCF, 0x3C, 0xF3,
  0xCF, 0x3C, 0xC0, 0x00, 0x61, 0x80, 0x1C, 0x70, 0x03, 0x8C, 0x00, 0x61,
  0x80, 0x1C, 0x70, 0x03, 0x8E, 0x00, 0x61, 0x81, 0xFF, 0xFF, 0x3F, 0xFF,
  0xC0, 0x61, 0x80, 0x1C, 0x70, 0x03, 0x0C, 0x07, 0xFF, 0xF9, 0xFF, 0xFF,
  0x03, 0x0C, 0x00, 0xE3, 0x80, 0x1C, 0x70, 0x03, 0x0C, 0x00, 0xE3, 0x80,
  0x1C, 0x60, 0x00, 0x01, 0x00, 0x08, 0x01, 0xF0, 0x3F, 0xC3, 0xFF, 0x3C,
  0xB9, 0xC5, 0x0E, 0x20, 0x79, 0x01, 0xE8, 0x0F, 0xC0, 0x1F, 0x80, 0x3E,
  0x00, 0xF8, 0x05, 0xE0, 0x27, 0x21, 0x3F, 0x09, 0xDE, 0x5E, 0xFF, 0xE3,
  0xFE, 0x07, 0xE0, 0x04, 0x00, 0x20, 0x3E, 0x03, 0x87, 0xF0, 0x30, 0xE3,
  0x86, 0x0C, 0x18, 0xE0, 0xC1, 0x8C, 0x0C, 0x19, 0xC0, 0xC1, 0x98, 0x0E,
  0x3B, 0x80, 0x7F, 0x30, 0x03, 0xE6, 0x00, 0x00, 0x67, 0xC0, 0x0C, 0xFE,
  0x01, 0xDC, 0x70, 0x19, 0x83, 0x03, 0x98, 0x30, 0x31, 0x83, 0x07, 0x18,
  0x30, 0x61, 0xC7, 0x0E, 0x0F, 0xE1, 0xC0, 0x7C, 0x07, 0xC0, 0x0F, 0xF0,
  0x07, 0x3C, 0x07, 0x0E, 0x03, 0x87, 0x01, 0xC3, 0x80, 0xF3, 0x80, 0x3B,
  0xC0, 0x1F, 0xC0, 0x07, 0x80, 0x0F, 0xE0, 0x0F, 0x78, 0x47, 0x1E, 0x77,
  0x07, 0xBB, 0x81, 0xF9, 0xC0, 0x78, 0xF0, 0xFE, 0x3F, 0xFF, 0x0F, 0xFB,
  0xC3, 0xF0, 0xF0, 0xFF, 0xFC, 0x18, 0xCC, 0x67, 0x39, 0x9C, 0xE7, 0x39,
  0xCE, 0x73, 0x9C, 0xE7, 0x18, 0xC7, 0x38, 0xC6, 0x18, 0xC0, 0xC6, 0x18,
  0xC7, 0x38, 0xC6, 0x39, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCC, 0x67, 0x39,
  0x8C, 0xC6, 0x00, 0x0C, 0x23, 0x2E, 0xDD, 0xFE, 0x1E, 0x1F, 0xEE, 0xDE,
  0x32, 0x0C, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
  0x80, 0x01, 0x80, 0x01, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x80, 0x01,
  0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x31,
  0xCC, 0xE6, 0x33, 0x18, 0xFF, 0xFF, 0xF8, 0xFF, 0x80, 0x00, 0x70, 0x06,
  0x00, 0x60, 0x0E, 0x00, 0xC0, 0x1C, 0x01, 0x80, 0x18, 0x03, 0x00, 0x30,
  0x07, 0x00, 0x60, 0x0E, 0x00, 0xC0, 0x0C, 0x01, 0x80, 0x18, 0x03, 0x80,
  0x30, 0x07, 0x00, 0x60, 0x06, 0x00, 0xE0, 0x00, 0x0F, 0xC0, 0x7F, 0x83,
  0xFF, 0x1E, 0x1E, 0x70, 0x39, 0xC0, 0xEE, 0x01, 0xF8, 0x07, 0xE0, 0x1F,
  0x80, 0x7E, 0x01, 0xF8, 0x07, 0xE0, 0x1F, 0x80, 0x77, 0x03, 0x9C, 0x0E,
  0x78, 0x78, 0xFF, 0xC1, 0xFE, 0x03, 0xE0, 0x7E, 0xFF, 0xF8, 0x70, 0xE1,
  0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38,
  0x70, 0x0F, 0xC1, 0xFF, 0x1F, 0xFD, 0xF0, 0xFE, 0x03, 0xF0, 0x1C, 0x00,
  0xE0, 0x07, 0x00, 0x70, 0x07, 0x80, 0x38, 0x03, 0x80, 0x3C, 0x03, 0xC0,
  0x3C, 0x03, 0xC0, 0x3C, 0x01, 0xFF, 0xDF, 0xFF, 0xFF, 0xF0, 0x0F, 0xC1,
  0xFF, 0x1F, 0xFC, 0xF0, 0xF7, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x0F, 0x03,
  0xF0, 0x1E, 0x00, 0xF8, 0x00, 0xE0, 0x03, 0x80, 0x1F, 0x80, 0xFC, 0x07,
  0xF0, 0x7B, 0xFF, 0x8F, 0xF8, 0x3F, 0x00, 0x00, 0x10, 0x00, 0x60, 0x01,
  0xC0, 0x03, 0x80, 0x0F, 0x00, 0x3E, 0x00, 0x7C, 0x01, 0xB8, 0x07, 0x70,
  0x0C, 0xE0, 0x31, 0xC0, 0xC3, 0x83, 0x87, 0x07, 0xFF, 0xDF, 0xFF, 0xFF,
  0xFF, 0x00, 0x70, 0x00, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x0F, 0xF8, 0x7F,
  0xE1, 0xFF, 0x86, 0x00, 0x38, 0x00, 0xFF, 0x03, 0xFF, 0x0F, 0xFE, 0x70,
  0x79, 0x00, 0xF0, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x00, 0x74, 0x01, 0xD8,
  0x0E, 0xF0, 0x79, 0xFF, 0xC3, 0xFE, 0x07, 0xE0, 0x01, 0x80, 0x0E, 0x00,
  0xE0, 0x0F, 0x00, 0x70, 0x07, 0x00, 0x70, 0x03, 0x80, 0x3F, 0xC1, 0xFF,
  0x1F, 0xFC, 0xF1, 0xEF, 0x07, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xF0, 0x7B,
  0xC7, 0x9F, 0xFC, 0x7F, 0xC0, 0xF8, 0x00, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF,
  0x80, 0x1C, 0x00, 0x70, 0x03, 0x80, 0x0E, 0x00, 0x70, 0x01, 0xC0, 0x0E,
  0x00, 0x38, 0x01, 0xC0, 0x07, 0x00, 0x38, 0x00, 0xE0, 0x07, 0x00, 0x1C,
  0x00, 0xE0, 0x03, 0x80, 0x1C, 0x00, 0x0F, 0x81, 0xFF, 0x0F, 0xF8, 0xF1,
  0xE7, 0x07, 0x38, 0x39, 0xC1, 0xCF, 0x1E, 0x3F, 0xE0, 0xFE, 0x0F, 0xF8,
  0xE0, 0xEE, 0x03, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xF0, 0x7B, 0xFF, 0x8F,
  0xF8, 0x3F, 0x80, 0x0F, 0x81, 0xFF, 0x1F, 0xFC, 0xF1, 0xEF, 0x07, 0xF0,
  0x1F, 0x80, 0xFC, 0x07, 0xF0, 0x7F, 0xC7, 0x9F, 0xFC, 0x7F, 0xC1, 0xFE,
  0x00, 0xE0, 0x07, 0x00, 0x70, 0x07, 0x00, 0x30, 0x03, 0x80, 0x38, 0x00,
  0xFF, 0x80, 0x00, 0x1F, 0xF0, 0x1C, 0x71, 0xC0, 0x00, 0x00, 0x00, 0x10,
  0x63, 0x0C, 0x71, 0x8E, 0x30, 0x00, 0x01, 0x00, 0x0F, 0x00, 0x3F, 0x01,
  0xF8, 0x07, 0xE0, 0x3F, 0x00, 0xFC, 0x00, 0xE0, 0x00, 0xFC, 0x00, 0x3F,
  0x00, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0x3F, 0x00, 0x0F, 0x00, 0x01, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0xFF, 0x80, 0x00, 0xF0, 0x00, 0xFC, 0x00, 0x1F, 0x80, 0x07, 0xE0, 0x00,
  0xFC, 0x00, 0x3F, 0x00, 0x07, 0x00, 0x3F, 0x00, 0xFC, 0x07, 0xE0, 0x1F,
  0x80, 0xFC, 0x00, 0xF0, 0x00, 0x80, 0x00, 0x3E, 0x3F, 0xB9, 0xFC, 0x7E,
  0x38, 0x1C, 0x1E, 0x3E, 0x3E, 0x3C, 0x3C, 0x1C, 0x0E, 0x77, 0x39, 0xF8,
  0x78, 0x00, 0x0E, 0x07, 0x03, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0xFF, 0xF8,
  0x01, 0xF0, 0x1F, 0x01, 0xE0, 0x01, 0xC1, 0xC0, 0x00, 0x71, 0xC0, 0x00,
  0x18, 0xC0, 0xF0, 0x0E, 0xC0, 0xFD, 0xC3, 0x60, 0xE3, 0xC1, 0xE0, 0xC0,
  0xE0, 0xF0, 0xE0, 0x70, 0x78, 0x60, 0x30, 0x3C, 0x30, 0x38, 0x36, 0x18,
  0x1C, 0x1B, 0x0C, 0x0E, 0x19, 0x87, 0x1F, 0x3C, 0x61, 0xFF, 0xFC, 0x30,
  0x78, 0xF8, 0x1C, 0x00, 0x00, 0x07, 0x00, 0x01, 0x01, 0xC0, 0x01, 0xC0,
  0x7C, 0x07, 0xC0, 0x0F, 0xFF, 0x80, 0x00, 0xFE, 0x00, 0x00, 0x40, 0x00,
  0x08, 0x00, 0x03, 0x80, 0x00, 0x70, 0x00, 0x1E, 0x00, 0x03, 0xE0, 0x00,
  0xEC, 0x00, 0x1D, 0xC0, 0x07, 0x38, 0x00, 0xE3, 0x80, 0x38, 0x70, 0x07,
  0x07, 0x01, 0xFF, 0xE0, 0x3F, 0xFE, 0x07, 0xFF, 0xC1, 0xC0, 0x1C, 0x38,
  0x03, 0x8E, 0x00, 0x79, 0xC0, 0x07, 0x70, 0x00, 0xF0, 0xFF, 0x87, 0xFF,
  0x3F, 0xF9, 0xC1, 0xEE, 0x07, 0x70, 0x3B, 0x81, 0xDC, 0x1C, 0xFF, 0xC7,
  0xFE, 0x3F, 0xFD, 0xC1, 0xEE, 0x03, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xE0,
  0xFF, 0xFF, 0xBF, 0xF9, 0xFF, 0x80, 0x01, 0xFC, 0x03, 0xFF, 0x87, 0xFF,
  0xE7, 0xE0, 0x73, 0xC0, 0x0B, 0xC0, 0x01, 0xC0, 0x01, 0xC0, 0x00, 0xE0,
  0x00, 0x70, 0x00, 0x38, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x03, 0x80, 0x01,
  0xE0, 0x00, 0x78, 0x01, 0x3E, 0x07, 0x8F, 0xFF, 0xC1, 0xFF, 0xC0, 0x3F,
  0x80, 0xFF, 0xE0, 0x7F, 0xFC, 0x3F, 0xFF, 0x1C, 0x07, 0xCE, 0x00, 0xF7,
  0x00, 0x3B, 0x80, 0x1F, 0xC0, 0x07, 0xE0, 0x03, 0xF0, 0x01, 0xF8, 0x00,
  0xFC, 0x00, 0x7E, 0x00, 0x3F, 0x00, 0x3F, 0x80, 0x1D, 0xC0, 0x1E, 0xE0,
  0x3E, 0x7F, 0xFE, 0x3F, 0xFE, 0x1F, 0xFC, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
  0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x70,
  0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1F, 0xFF, 0xFF, 0xFF, 0xF0,
  0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0xFF, 0xFF,
  0xFF, 0xFF, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C,
  0x03, 0x80, 0x70, 0x00, 0x01, 0xFC, 0x00, 0x7F, 0xF0, 0x1F, 0xFF, 0x83,
  0xF0, 0x3C, 0x3C, 0x01, 0x87, 0x80, 0x00, 0x70, 0x00, 0x0E, 0x00, 0x00,
  0xE0, 0x00, 0x0E, 0x00, 0x00, 0xE0, 0x0F, 0xFE, 0x00, 0xFF, 0xE0, 0x0F,
  0xF7, 0x00, 0x07, 0x78, 0x00, 0x73, 0xC0, 0x0E, 0x3F, 0x03, 0xE1, 0xFF,
  0xFC, 0x07, 0xFF, 0x80, 0x1F, 0xC0, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38,
  0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07,
  0x67, 0xFF, 0xDF, 0xC7, 0xC0, 0xE0, 0x3D, 0xC0, 0xF3, 0x83, 0xC7, 0x0F,
  0x0E, 0x3C, 0x1C, 0xF0, 0x39, 0xC0, 0x77, 0x00, 0xFE, 0x01, 0xFC, 0x03,
  0xB8, 0x07, 0x78, 0x0E, 0x78, 0x1C, 0x78, 0x38, 0x78, 0x70, 0xF0, 0xE0,
  0xF1, 0xC0, 0xF3, 0x80, 0xF7, 0x01, 0xF0, 0xE0, 0x38, 0x0E, 0x03, 0x80,
  0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38,
  0x0E, 0x03, 0x80, 0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0x08, 0x00, 0x40, 0x10,
  0x00, 0x40, 0x30, 0x01, 0x80, 0x60, 0x03, 0x00, 0xE0, 0x0E, 0x03, 0xC0,
  0x1E, 0x07, 0xC0, 0x7C, 0x0F, 0x80, 0xF8, 0x1B, 0x83, 0xB0, 0x77, 0x07,
  0x70, 0xEF, 0x1E, 0xE1, 0xCE, 0x39, 0xC3, 0x9E, 0xF3, 0x8E, 0x1D, 0xC3,
  0x1C, 0x1B, 0x07, 0x38, 0x3E, 0x0E, 0x70, 0x38, 0x1C, 0xC0, 0x70, 0x3B,
  0x80, 0x40, 0x3F, 0x00, 0x80, 0x70, 0x80, 0x01, 0xF0, 0x00, 0x7E, 0x00,
  0x1F, 0xC0, 0x07, 0xF8, 0x01, 0xFF, 0x00, 0x7F, 0xE0, 0x1F, 0xBC, 0x07,
  0xE7, 0xC1, 0xF8, 0xF8, 0x7E, 0x1F, 0x1F, 0x83, 0xE7, 0xE0, 0x3D, 0xF8,
  0x07, 0xFE, 0x00, 0xFF, 0x80, 0x1F, 0xE0, 0x03, 0xF8, 0x00, 0x7E, 0x00,
  0x0F, 0x80, 0x01, 0x01, 0xFC, 0x00, 0x3F, 0xF8, 0x03, 0xFF, 0xE0, 0x7E,
  0x0F, 0x83, 0xC0, 0x1E, 0x3C, 0x00, 0x79, 0xC0, 0x01, 0xDE, 0x00, 0x0F,
  0xE0, 0x00, 0x3F, 0x00, 0x01, 0xF8, 0x00, 0x0F, 0xC0, 0x00, 0x7F, 0x00,
  0x07, 0xB8, 0x00, 0x39, 0xE0, 0x03, 0xC7, 0x80, 0x3C, 0x3F, 0x07, 0xE0,
  0xFF, 0xFC, 0x01, 0xFF, 0xC0, 0x03, 0xF8, 0x00, 0xFF, 0x8F, 0xFE, 0xFF,
  0xEE, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x0F, 0xFF, 0xEF, 0xFE, 0xFF,
  0x8E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0,
  0x0E, 0x00, 0x01, 0xFC, 0x00, 0x1F, 0xFC, 0x01, 0xFF, 0xF8, 0x0F, 0xC1,
  0xF8, 0x3C, 0x01, 0xE1, 0xE0, 0x03, 0xC7, 0x00, 0x07, 0x3C, 0x00, 0x0E,
  0xE0, 0x00, 0x3B, 0x80, 0x00, 0xEE, 0x00, 0x03, 0xB8, 0x00, 0x0E, 0xE0,
  0x00, 0x39, 0xC0, 0xF9, 0xC7, 0x80, 0xFF, 0x0F, 0x01, 0xF8, 0x1F, 0x07,
  0xE0, 0x3F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0x1E, 0x00, 0x00, 0x3C,
  0xFF, 0x07, 0xFE, 0x3F, 0xF1, 0xC3, 0xCE, 0x0E, 0x70, 0x73, 0x83, 0x9C,
  0x3C, 0xFF, 0xC7, 0xFE, 0x3F, 0xC1, 0xDC, 0x0E, 0x70, 0x73, 0xC3, 0x8E,
  0x1C, 0x78, 0xE1, 0xE7, 0x07, 0x38, 0x3D, 0xC0, 0xF0, 0x0F, 0xC0, 0xFF,
  0x0F, 0xFC, 0xF0, 0xE7, 0x02, 0x38, 0x01, 0xC0, 0x07, 0x80, 0x3F, 0x00,
  0x7E, 0x01, 0xF8, 0x01, 0xE0, 0x07, 0x80, 0x1C, 0x80, 0xFC, 0x07, 0x78,
  0x7B, 0xFF, 0x8F, 0xF8, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x0E,
  0x00, 0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0,
  0x0E, 0x00, 0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01,
  0xC0, 0x0E, 0x00, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x0F, 0xF0, 0x0F, 0x78,
  0x1E, 0x3F, 0xFC, 0x3F, 0xF8, 0x0F, 0xE0, 0xE0, 0x03, 0xB8, 0x03, 0x9C,
  0x01, 0xCE, 0x01, 0xE3, 0x80, 0xE1, 0xC0, 0xF0, 0x70, 0x70, 0x38, 0x38,
  0x0C, 0x38, 0x07, 0x1C, 0x03, 0x9C, 0x00, 0xEE, 0x00, 0x77, 0x00, 0x1F,
  0x00, 0x0F, 0x80, 0x07, 0x80, 0x01, 0xC0, 0x00, 0xC0, 0x00, 0x20, 0x00,
  0x10, 0x00, 0xE0, 0x08, 0x01, 0xDC, 0x03, 0x00, 0xE7, 0x00, 0xC0, 0x39,
  0xC0, 0x70, 0x0E, 0x38, 0x1E, 0x07, 0x0E, 0x07, 0x81, 0xC3, 0x83, 0xF0,
  0xF0, 0x70, 0xFC, 0x38, 0x1C, 0x73, 0x0E, 0x03, 0x9C, 0xE7, 0x00, 0xE7,
  0x39, 0xC0, 0x3B, 0x87, 0x70, 0x07, 0xE1, 0xF8, 0x01, 0xF0, 0x3E, 0x00,
  0x7C, 0x0F, 0x00, 0x0E, 0x03, 0xC0, 0x03, 0x80, 0x70, 0x00, 0x60, 0x18,
  0x00, 0x10, 0x02, 0x00, 0x04, 0x00, 0x80, 0x78, 0x0F, 0x38, 0x0E, 0x1C,
  0x1C, 0x1E, 0x3C, 0x0E, 0x38, 0x0F, 0x78, 0x07, 0x70, 0x03, 0xE0, 0x03,
  0xE0, 0x01, 0xC0, 0x03, 0xE0, 0x03, 0xE0, 0x07, 0xF0, 0x0F, 0x70, 0x0E,
  0x38, 0x1C, 0x38, 0x3C, 0x1C, 0x38, 0x1E, 0x78, 0x0E, 0xF0, 0x0F, 0xF0,
  0x07, 0xB8, 0x03, 0x8E, 0x03, 0x87, 0x83, 0xC1, 0xC1, 0xC0, 0x71, 0xC0,
  0x3D, 0xE0, 0x0E, 0xE0, 0x07, 0xF0, 0x01, 0xF0, 0x00, 0x70, 0x00, 0x38,
  0x00, 0x1C, 0x00, 0x0E, 0x00, 0x07, 0x00, 0x03, 0x80, 0x01, 0xC0, 0x00,
  0xE0, 0x00, 0x70, 0x00, 0x38, 0x00, 0x3F, 0xFE, 0x7F, 0xF8, 0xFF, 0xE0,
  0x01, 0xC0, 0x07, 0x00, 0x0E, 0x00, 0x38, 0x00, 0xF0, 0x01, 0xC0, 0x07,
  0x00, 0x0E, 0x00, 0x38, 0x00, 0xF0, 0x01, 0xC0, 0x07, 0x00, 0x0E, 0x00,
  0x38, 0x00, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xF9, 0xCE, 0x73,
  0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xFF,
  0xC0, 0xE0, 0x06, 0x00, 0x60, 0x07, 0x00, 0x30, 0x03, 0x80, 0x18, 0x01,
  0x80, 0x0C, 0x00, 0xC0, 0x0E, 0x00, 0x60, 0x07, 0x00, 0x30, 0x03, 0x00,
  0x18, 0x01, 0x80, 0x1C, 0x00, 0xC0, 0x0E, 0x00, 0x60, 0x06, 0x00, 0x70,
  0xFF, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE,
  0x73, 0x9C, 0xE7, 0xFF, 0xC0, 0x03, 0xC0, 0x07, 0xE0, 0x0F, 0xF0, 0x1C,
  0x38, 0x38, 0x1C, 0x70, 0x0E, 0xE0, 0x07, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0,
  0xC1, 0x83, 0x1F, 0x39, 0xFF, 0xDE, 0x3F, 0xE0, 0xFE, 0x03, 0xF0, 0x1F,
  0x80, 0xFC, 0x07, 0xE0, 0x3F, 0x83, 0xDE, 0x3E, 0x7F, 0xF1, 0xF3, 0x80,
  0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x1C,
  0x00, 0xE7, 0xC7, 0xFF, 0x3E, 0x3D, 0xE0, 0xEE, 0x03, 0xF0, 0x1F, 0x80,
  0xFC, 0x07, 0xE0, 0x3F, 0x83, 0xBE, 0x3D, 0xFF, 0xCE, 0xFC, 0x00, 0x0F,
  0x8F, 0xF7, 0x8D, 0xC1, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x1C, 0x17,
  0x84, 0xFF, 0x0F, 0x80, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03,
  0x80, 0x1C, 0x00, 0xE0, 0x07, 0x1F, 0x39, 0xFF, 0xDE, 0x3F, 0xE0, 0xFE,
  0x03, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xE0, 0x3F, 0x83, 0xDE, 0x3E, 0x7F,
  0xF1, 0xF3, 0x80, 0x0F, 0x81, 0xFF, 0x1E, 0x1C, 0xE0, 0x6E, 0x03, 0xFF,
  0xFF, 0xFF, 0xFC, 0x00, 0xE0, 0x23, 0x83, 0xDE, 0x3C, 0x7F, 0xC0, 0xFC,
  0x00, 0x0F, 0x1F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0x38,
  0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x1F, 0x39,
  0xFF, 0xDE, 0x3F, 0xE0, 0xFE, 0x03, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xE0,
  0x3F, 0x83, 0xDE, 0x3E, 0x7F, 0xF1, 0xF3, 0x80, 0x1D, 0xC0, 0xEE, 0x0F,
  0x78, 0x71, 0xFF, 0x03, 0xF0, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0,
  0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE7, 0xCF, 0xFE, 0xF8, 0xFF, 0x07, 0xE0,
  0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0,
  0x70, 0x6F, 0xF6, 0x00, 0x00, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x70,
  0x6F, 0xF6, 0x00, 0x00, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
  0x77, 0x70, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0,
  0x0E, 0x00, 0xE0, 0xEE, 0x1C, 0xE3, 0x8E, 0x70, 0xEE, 0x0F, 0xC0, 0xFE,
  0x0E, 0xE0, 0xE7, 0x0E, 0x38, 0xE3, 0xCE, 0x1E, 0xE0, 0xF0, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xE7, 0x87, 0x9F, 0xFB, 0xFB, 0xC7,
  0xC7, 0xF0, 0x70, 0x7E, 0x0E, 0x0F, 0xC1, 0xC1, 0xF8, 0x38, 0x3F, 0x07,
  0x07, 0xE0, 0xE0, 0xFC, 0x1C, 0x1F, 0x83, 0x83, 0xF0, 0x70, 0x7E, 0x0E,
  0x0E, 0xE7, 0xCF, 0xFE, 0xF8, 0xFF, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E,
  0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x70, 0x0F, 0xC0, 0xFF,
  0x87, 0x87, 0x9C, 0x0E, 0xE0, 0x1F, 0x80, 0x7E, 0x01, 0xF8, 0x07, 0xE0,
  0x1D, 0xC0, 0xE7, 0x87, 0x87, 0xF8, 0x0F, 0xC0, 0xE7, 0xC7, 0xFF, 0x3E,
  0x3D, 0xE0, 0xEE, 0x03, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xE0, 0x3F, 0x83,
  0xBE, 0x3D, 0xFF, 0xCE, 0x7C, 0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07,
  0x00, 0x38, 0x00, 0x1F, 0x39, 0xFF, 0xDE, 0x3F, 0xE0, 0xFE, 0x03, 0xF0,
  0x1F, 0x80, 0xFC, 0x07, 0xE0, 0x3F, 0x83, 0xDE, 0x3E, 0x7F, 0xF1, 0xF3,
  0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0xEF, 0xFE,
  0xF2, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x3F,
  0x1F, 0xEE, 0x3B, 0x84, 0xF0, 0x1E, 0x03, 0xF0, 0x3E, 0x03, 0xD0, 0x7E,
  0x1D, 0xFE, 0x3F, 0x00, 0x38, 0x70, 0xE1, 0xC3, 0x9F, 0xFF, 0x9C, 0x38,
  0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0x7E, 0x07, 0xE0,
  0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0x70,
  0xE7, 0xFE, 0x1F, 0x80, 0xE0, 0x3B, 0x83, 0x9C, 0x1C, 0x61, 0xC3, 0x8E,
  0x0C, 0x60, 0x77, 0x01, 0xB0, 0x0F, 0x80, 0x38, 0x01, 0xC0, 0x04, 0x00,
  0x20, 0x00, 0xE0, 0x20, 0x3B, 0x81, 0x03, 0x9C, 0x1C, 0x1C, 0x70, 0xE1,
  0xC3, 0x8F, 0x8E, 0x0C, 0x6C, 0xE0, 0x77, 0x77, 0x01, 0xB1, 0xB0, 0x0F,
  0x8F, 0x80, 0x38, 0x38, 0x01, 0xC1, 0xC0, 0x04, 0x04, 0x00, 0x20, 0x20,
  0x00, 0xF0, 0xF3, 0x87, 0x0E, 0x70, 0x7F, 0x81, 0xF8, 0x07, 0x80, 0x3C,
  0x03, 0xF0, 0x1F, 0xC1, 0xCE, 0x1C, 0x38, 0xE1, 0xEE, 0x07, 0x80, 0xE0,
  0x3B, 0x83, 0x9C, 0x1C, 0xE1, 0xC3, 0x8E, 0x1C, 0xE0, 0x67, 0x03, 0xB0,
  0x1F, 0x80, 0x7C, 0x03, 0xC0, 0x1E, 0x00, 0xE0, 0x07, 0x00, 0x70, 0x03,
  0x80, 0x38, 0x01, 0xC0, 0x1C, 0x00, 0x7F, 0xF7, 0xFE, 0x01, 0xC0, 0x3C,
  0x03, 0x80, 0x70, 0x0F, 0x00, 0xE0, 0x1E, 0x03, 0xC0, 0x38, 0x07, 0xFF,
  0xFF, 0xF0, 0x03, 0xC3, 0xF0, 0xF0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38,
  0x0E, 0x03, 0x80, 0xE0, 0x78, 0xF8, 0x3E, 0x01, 0xE0, 0x38, 0x0E, 0x03,
  0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xF0, 0x3F, 0x03, 0xC0, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF0, 0x3E, 0x03, 0xC0, 0x70, 0x1C, 0x07,
  0x01, 0xC0, 0x70, 0x1C, 0x07, 0x01, 0xC0, 0x78, 0x07, 0xC1, 0xF1, 0xE0,
  0x70, 0x1C, 0x07, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x03, 0xC3, 0xF0, 0xF0,
  0x00, 0x1F, 0x00, 0x5F, 0xF8, 0x7E, 0x0F, 0xFA, 0x00, 0xF8 };


/* font glyph data */
const GFXglyph font2Glyphs[] PROGMEM = {
  {     0,   1,   1,   8,    0,    0 },   // 0x20 ' '
  {     1,   3,  20,   9,    3,  -19 },   // 0x21 '!'
  {     9,   6,   7,   9,    1,  -18 },   // 0x22 '"'
  {    15,  19,  20,  21,    1,  -19 },   // 0x23 '#'
  {    63,  13,  24,  17,    1,  -21 },   // 0x24 '$'
  {   102,  20,  20,  22,    1,  -19 },   // 0x25 '%'
  {   152,  17,  20,  18,    1,  -19 },   // 0x26 '&'
  {   195,   2,   7,   4,    1,  -18 },   // 0x27 '''
  {   197,   5,  26,   8,    2,  -19 },   // 0x28 '('
  {   214,   5,  26,   8,    1,  -19 },   // 0x29 ')'
  {   231,  10,   9,  12,    1,  -19 },   // 0x2A '*'
  {   243,  16,  16,  23,    3,  -15 },   // 0x2B '+'
  {   275,   5,   8,   8,    2,   -3 },   // 0x2C ','
  {   280,   7,   3,  11,    2,   -7 },   // 0x2D '-'
  {   283,   3,   3,   8,    2,   -2 },   // 0x2E '.'
  {   285,  12,  23,  12,    0,  -19 },   // 0x2F '/'
  {   320,  14,  20,  17,    1,  -19 },   // 0x30 '0'
  {   355,   7,  20,  17,    3,  -19 },   // 0x31 '1'
  {   373,  13,  20,  17,    1,  -19 },   // 0x32 '2'
  {   406,  13,  20,  17,    1,  -19 },   // 0x33 '3'
  {   439,  15,  20,  17,    0,  -19 },   // 0x34 '4'
  {   477,  14,  20,  17,    1,  -19 },   // 0x35 '5'
  {   512,  13,  21,  17,    2,  -20 },   // 0x36 '6'
  {   547,  14,  20,  17,    2,  -19 },   // 0x37 '7'
  {   582,  13,  20,  17,    1,  -19 },   // 0x38 '8'
  {   615,  13,  20,  17,    1,  -19 },   // 0x39 '9'
  {   648,   3,  12,   9,    3,  -11 },   // 0x3A ':'
  {   653,   6,  16,   9,    2,  -11 },   // 0x3B ';'
  {   665,  16,  15,  23,    4,  -15 },   // 0x3C '<'
  {   695,  16,   7,  23,    3,  -11 },   // 0x3D '='
  {   709,  16,  15,  23,    4,  -15 },   // 0x3E '>'
  {   739,   9,  20,  15,    3,  -19 },   // 0x3F '?'
  {   762,  25,  24,  27,    1,  -19 },   // 0x40 '@'
  {   837,  19,  20,  18,    0,  -19 },   // 0x41 'A'
  {   885,  13,  20,  16,    2,  -19 },   // 0x42 'B'
  {   918,  17,  20,  20,    1,  -19 },   // 0x43 'C'
  {   961,  17,  20,  20,    2,  -19 },   // 0x44 'D'
  {  1004,  11,  20,  15,    2,  -19 },   // 0x45 'E'
  {  1032,  11,  20,  14,    2,  -19 },   // 0x46 'F'
  {  1060,  20,  20,  22,    1,  -19 },   // 0x47 'G'
  {  1110,  16,  20,  21,    2,  -19 },   // 0x48 'H'
  {  1150,   3,  20,   8,    2,  -19 },   // 0x49 'I'
  {  1158,   9,  20,  11,    0,  -19 },   // 0x4A 'J'
  {  1181,  15,  20,  17,    2,  -19 },   // 0x4B 'K'
  {  1219,  10,  20,  13,    2,  -19 },   // 0x4C 'L'
  {  1244,  23,  20,  24,    0,  -19 },   // 0x4D 'M'
  {  1302,  18,  20,  22,    2,  -19 },   // 0x4E 'N'
  {  1347,  21,  20,  24,    1,  -19 },   // 0x4F 'O'
  {  1400,  12,  20,  15,    2,  -19 },   // 0x50 'P'
  {  1430,  22,  21,  24,    1,  -19 },   // 0x51 'Q'
  {  1488,  13,  20,  15,    2,  -19 },   // 0x52 'R'
  {  1521,  13,  20,  15,    0,  -19 },   // 0x53 'S'
  {  1554,  13,  20,  14,    1,  -19 },   // 0x54 'T'
  {  1587,  16,  20,  20,    2,  -19 },   // 0x55 'U'
  {  1627,  17,  20,  17,    0,  -19 },   // 0x56 'V'
  {  1670,  26,  20,  26,    0,  -19 },   // 0x57 'W'
  {  1735,  16,  20,  16,    0,  -19 },   // 0x58 'X'
  {  1775,  17,  20,  16,    0,  -19 },   // 0x59 'Y'
  {  1818,  15,  20,  16,    0,  -19 },   // 0x5A 'Z'
  {  1856,   5,  26,   8,    3,  -19 },   // 0x5B '['
  {  1873,  12,  23,  12,    0,  -19 },   // 0x5C '\'
  {  1908,   5,  26,   8,    1,  -19 },   // 0x5D ']'
  {  1925,  16,   7,  27,    6,  -19 },   // 0x5E '^'
  {  1939,  14,   2,  14,    0,    5 },   // 0x5F '_'
  {  1943,   6,   4,  14,    3,  -18 },   // 0x60 '`'
  {  1946,  13,  13,  16,    1,  -12 },   // 0x61 'a'
  {  1968,  13,  21,  16,    2,  -20 },   // 0x62 'b'
  {  2003,  10,  13,  12,    1,  -12 },   // 0x63 'c'
  {  2020,  13,  21,  16,    1,  -20 },   // 0x64 'd'
  {  2055,  13,  13,  15,    1,  -12 },   // 0x65 'e'
  {  2077,   8,  21,   8,    0,  -20 },   // 0x66 'f'
  {  2098,  13,  19,  16,    1,  -12 },   // 0x67 'g'
  {  2129,  12,  21,  16,    2,  -20 },   // 0x68 'h'
  {  2161,   4,  21,   7,    1,  -20 },   // 0x69 'i'
  {  2172,   4,  27,   7,    1,  -20 },   // 0x6A 'j'
  {  2186,  12,  21,  14,    2,  -20 },   // 0x6B 'k'
  {  2218,   3,  21,   7,    2,  -20 },   // 0x6C 'l'
  {  2226,  19,  13,  24,    2,  -12 },   // 0x6D 'm'
  {  2257,  12,  13,  16,    2,  -12 },   // 0x6E 'n'
  {  2277,  14,  13,  16,    1,  -12 },   // 0x6F 'o'
  {  2300,  13,  19,  16,    2,  -12 },   // 0x70 'p'
  {  2331,  13,  19,  16,    1,  -12 },   // 0x71 'q'
  {  2362,   8,  13,  10,    2,  -12 },   // 0x72 'r'
  {  2375,  10,  13,  12,    1,  -12 },   // 0x73 's'
  {  2392,   7,  18,   8,    1,  -17 },   // 0x74 't'
  {  2408,  12,  13,  16,    2,  -12 },   // 0x75 'u'
  {  2428,  13,  13,  13,    0,  -12 },   // 0x76 'v'
  {  2450,  21,  13,  21,    0,  -12 },   // 0x77 'w'
  {  2485,  13,  13,  12,    0,  -12 },   // 0x78 'x'
  {  2507,  13,  19,  13,    0,  -12 },   // 0x79 'y'
  {  2538,  12,  13,  12,    0,  -12 },   // 0x7A 'z'
  {  2558,  10,  25,  14,    2,  -19 },   // 0x7B '{'
  {  2590,   2,  27,  14,    6,  -20 },   // 0x7C '|'
  {  2597,  10,  25,  14,    2,  -19 },   // 0x7D '}'
  {  2629,  18,   4,  23,    2,   -9 } }; // 0x7E '~'

const GFXfont ubitxFont PROGMEM = {
  (uint8_t  *)font2Bitmaps,
  (GFXglyph *)font2Glyphs,
  0x20,   // first
  0x7E};  // last
  // , 33 };  //  <<<--- yAdvance, not used, apparently

// Approx. 3310 bytes

#endif // _NANO_GUI_H_
